#!/usr/bin/env python

import sys
import os
import argparse
import pwd
import ConfigParser
from boto.glacier.layer1 import Layer1
from boto.glacier.vault import Vault
from boto.glacier.concurrent import ConcurrentUploader


parser = argparse.ArgumentParser()
parser.add_argument('archive', type=str, help="Specify the name of the archive file to upload.")
parser.add_argument('--vault', dest='vault', type=str, default='HRSE-Backup', help="Specify the name of the vault.")
parser.add_argument('--chunksize', dest='chunksize', type=int, default=32768, help="Specify the upload chunk size.")
args = parser.parse_args()

pwent = pwd.getpwuid(os.getuid())
homedir = pwent.pw_dir
cp = ConfigParser.ConfigParser()
cp.read([os.path.expanduser(homedir+'/.aws.conf')])
access_key = cp.get('glacier', 'access_key')
secret_key = cp.get('glacier', 'secret_key')

if not os.access(args.archive, os.R_OK):
    print("ERROR: "+args.archive+" is unreadable.")
    sys.exit(1);
 
glayer1 = Layer1(access_key, secret_key)
uploader = ConcurrentUploader(glayer1, args.vault, args.chunksize)

print("Uploading "+args.archive)
aid = uploader.upload(args.archive, args.archive)

print("%s" % (aid))

sys.exit(0)

